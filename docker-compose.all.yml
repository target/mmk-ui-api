version: '3.9'
services:
  postgres:
    image: postgres:12.7
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_DB=merrymaker
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres:/var/lib/postgresql/data
    command: ['-c', 'shared_buffers=1GB']

  redis:
    image: redis
    ports:
      - 6379:6379

  proxy:
    image: traefik:v2.4.2
    command:
      - '--providers.docker'
      - '--entrypoints.http.address=:8080'
      - '--log.level=DEBUG'
    ports:
      - 8080:8080
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true

  scanner:
    build:
      dockerfile: scanner/Dockerfile
    depends_on:
      - redis
    environment:
      - NODE_ENV=development
      - DEPLOYMENT=docker

  api:
    build:
      dockerfile: backend/Dockerfile
    command: >
      sh -c "yarn migrate
      && node app.js"
    depends_on:
      - redis
      - postgres
    environment:
      - NODE_ENV=development
      - DEPLOYMENT=docker
    labels:
      - traefik.enable=true
      - traefik.http.routers.mmk-api.entrypoints=http
      - traefik.http.routers.mmk-api.rule=PathPrefix(`/api`)
      - traefik.http.services.mmk-api.loadbalancer.server.port=3001

  ui:
    build:
      dockerfile: frontend/Dockerfile
    depends_on:
      - api
    labels:
      - traefik.enable=true
      - traefik.http.routers.mmk-client.entrypoints=http
      - traefik.http.routers.mmk-client.rule=PathPrefix(`/`)
      - traefik.http.services.mmk-client.loadbalancer.server.port=2015

  jobs:
    build:
      dockerfile: backend/Dockerfile
    depends_on:
      - redis
      - postgres
    command: ['node', '/app/jobs/index.js']
    environment:
      - NODE_ENV=development
      - DEPLOYMENT=docker
    labels:
      - traefik.enable=false

  jsscope:
    image: target/mmk-js-scope:v1.3.0
    depends_on:
      - redis
    environment:
      - NODE_ENV=development
      - DEPLOYMENT=docker
    labels:
      - traefik.enable=false

volumes:
  postgres:
    driver: local
